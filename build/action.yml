name: Build

inputs:
  environment:
    type: string
    required: true
  service-folder:
    type: string
    default: '.'
  sonar-token:
    type: string

outputs:
  image-name:
    value: ${{ steps.build.outputs.image-name }}
    #value: ${{ steps.random-number-generator.outputs.random-number }}

runs:
  using: 'composite'
  steps:
    - name: 'Calculate Revision (main)'
      if: github.ref == 'refs/heads/main'
      shell: bash
      run: |
        echo "revision=$(date +%Y%m%d)-${{ github.run_number }}" >> $GITHUB_ENV

    - name: 'Calculate Revision (branch)'
      if: github.ref != 'refs/heads/main'
      shell: bash
      run: |
        echo "revision=$(date +%Y%m%d)-${{ github.sha }}-${{ github.run_number }}" >> $GITHUB_ENV

    - name: 'Setup Maven'
      uses: s4u/setup-maven-action@v1.18.0
      with:
        java-version: 21
        java-distribution: 'liberica'
        checkout-fetch-depth: 0
        #settings-repositories: '...'

    - name: 'Build & Test'
      shell: bash
      run: |
        mvn -e -B -no-transfer-progress clean jacoco:prepare-agent package jacoco:report -Drevision="$revision"
      #env:
      # ...

    - name: 'Analyse with SonarCloud'
      if: github.actor != 'dependabot[bot]'
      shell: bash
      run: |
        mvn -e -B -no-transfer-progress sonar:sonar -Drevision="$revision"
      env:
        SONAR_TOKEN: "${{ inputs.sonar-token }}"
        SONAR_HOST_URL: "https://sonarcloud.io"

    - name: 'Check Quality Gate'
      if: github.actor != 'dependabot[bot]'
      uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
      with:
        scanMetadataReportFile: 'target/sonar/report-task.txt'
      #  env:
      #    ...

    - name: 'Build Image'
      id: 'build-image'
      shell: bash
      working-directory: ${{ inputs.service-folder }}
      run: |
        groupId="$(mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout)"
        artifactId="$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)"
        imageName="xxxx.azurecr.io/${groupId/.//}/$artifactId:$revision"
        echo "image-name=$imageName" >> $GITHUB_OUTPUT

        mvn -e -B -no-transfer-progress spring-boot:build-image-no-fork -Drevision="$revision" \
            -Ddocker.imageName="$imageName"

    - name: 'Login ...'
      if: inputs.environment != 'none'
      shell: bash
      run: |
        echo "Login ..."

    - name: 'Publish Image'
      if: inputs.environment != 'none'
      shell: bash
      run: |
        echo "Publish image "

    - name: 'Publish Test Results'
      if: failure()
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: '**/target/surefire-reports/**/*.xml'

    #- name: 'Update Dependency Graph'
    #  uses: advanced-security/maven-dependency-submission-action@v4

#    uses: hwolf/workflows/.github/workflows/build-and-test.yml@main
#    with:
#      publish-image: ${{ inputs.environment != 'none' }}
#      sonar-token: ${{ inputs.sonar-token }}

#  terraform:
#    name: 'Validate Terraform'
#    uses: hwolf/workflows/.github/workflows/verify-terraform.yml@main

#  deploy:
#    name: 'Deploy'
#    if: inputs.environment != 'none'
#    needs:
#      - build
#      - terraform
#    uses: hwolf/workflows/.github/workflows/deploy.yml@main
#    with:
#      image-name: "${{ needs.build.outputs.image-name }}"
#      environment: "${{ inputs.environment }}"
