name: 'Build and Test'
on:
  workflow_call:
    inputs:
      publish-image:
        type: boolean
        default: false
      service-folder:
        type: string
        default: '.'
    secrets:
      SONAR_TOKEN:
    outputs:
      revision:
        value: ${{ jobs.build.outputs.revision }}

env:
  DOCKER_REGISTRY: xxxx.azurecr.io

jobs:
  build:
    name: 'Build and Test'
    runs-on: ubuntu-latest
    outputs:
      revision: ${{ steps.revision.outputs.revision }}
    steps:
      - name: 'Calculate revision'
        run: |
          revision=$(date +%Y%m%d)-${{ github.run_number }}
          if ${{ github.ref_name != 'main' }}
          then
            revision="$revision-${GITHUB_SHA::16}"
          fi
          echo "revision=$revision" >> $GITHUB_ENV

      - name: 'Determine image name'
        run: |
          groupId="$(mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout)"
          artifactId="$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)"
          imageName="$DOCKER_REGISTRY/${groupId/.//}/$artifactId:$revision"
          echo "imageName=$imageName" >> $GITHUB_ENV

      - name: 'Build and test'
        run: |
          mvn -e -B -no-transfer-progress clean jacoco:prepare-agent verify jacoco:report -Drevision="$revision"

      - name: 'SonarCloud'
        if: github.actor != 'dependabot[bot]'
        run: |
          mvn -e -B -no-transfer-progress sonar:sonar -Drevision="$revision" -Dsonar.qualitygate.wait=true
        env:
          SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"
          SONAR_HOST_URL: "https://sonarcloud.io"

      - name: 'Build image'
        working-directory: ${{ inputs.service-folder }}
        run: |
          mvn -e -B -no-transfer-progress spring-boot:build-image-no-fork -Drevision="$revision" \
              -Ddocker.imageName="$imageName"

      - name: 'Login ...'
        if: inputs.publish-image
        run: |
          echo "Login ..."

      - name: 'Publish image'
        if: inputs.publish-image
        run: |
          echo "Publish image $imageName"

      - name: 'Publish test results'
        if: failure()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: '**/target/surefire-reports/**/*.xml'

      #- name: 'Update Dependency Graph'
      #  uses: advanced-security/maven-dependency-submission-action@v4

      - name: 'Revision'
        id: revision
        run: |
          echo "revision=$revision" >> $GITHUB_OUTPUT
