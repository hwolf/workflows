name: 'Build and Test'
on:
  workflow_call:
    inputs:
      revision:
        type: string
        required: true
      service-folder:
        type: string
        default: '.'
      publish-image:
        type: boolean
        default: false
      environment:
        type: string
        default: DEV
      ref:
        type: string
        default: ''
    outputs:
      image-name:
        value: ${{ jobs.build.outputs.image-name }}

jobs:
  build:
    name: 'Build and Test'
    runs-on: ubuntu-latest
    outputs:
      image-name: ${{ steps.build-image.outputs.image-name }}
    steps:
      - name: 'Setup Maven'
        uses: s4u/setup-maven-action@v1.18.0
        with:
          checkout-ref: ${{ inputs.ref }}
          java-version: 21
          java-distribution: 'liberica'
          #settings-repositories: '...'

      - name: 'Build & Test'
        run: |
          mvn -e -B -no-transfer-progress clean jacoco:prepare-agent package jacoco:report -Drevision="${{ inputs.revision }}"
        #env:
        # ...

      #- name: 'Analyse with SonarCloud'
      #  if: github.actor != 'dependabot[bot]'
      #  run: |
      #    mvn -e -B -no-transfer-progress sonar:sonar -Drevision="${{ inputs.revision }}"
      #    env:
      #     ...

      #- name: 'Check Quality Gate'
      #  if: github.actor != 'dependabot[bot]'
      #  uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
      #  with:
      #    scanMetadataReportFile: 'target/sonar/report-task.txt'
      #  env:
      #    ...

      - name: 'Build Image'
        id: 'build-image'
        working-directory: ${{ inputs.service-folder }}
        run: |
          groupId="$(mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout)"
          artifactId="$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)"
          imageName="xxxx.azurecr.io/${groupId/.//}/$artifactId:${{ inputs.revision }}"
          echo "image-name=$imageName" >> $GITHUB_OUTPUT

          mvn -e -B -no-transfer-progress spring-boot:build-image-no-fork -Drevision="${{ inputs.revision }}" \
              -Ddocker.imageName="$imageName"

      - name: 'Login ...'
        if: inputs.publish-image
        run: |
          echo "Login ..."

      - name: 'Publish Image'
        if: inputs.publish-image
        run: |
          echo "Publish image "

      - name: 'Publish Test Results'
        if: failure()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: '**/target/surefire-reports/**/*.xml'

      #- name: 'Update Dependency Graph'
      #  uses: advanced-security/maven-dependency-submission-action@v4
